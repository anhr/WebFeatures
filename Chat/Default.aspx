<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Default.aspx.cs" Inherits="WelcomeToChat.Default" %>

<!DOCTYPE html>

<html>
<head>
    <meta name="author" content="Andrej Hristoliubov anhr@mail.ru">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <link rel="stylesheet" href="../MyIsapi/normal.css" type="text/css">
    <link rel="stylesheet" href="../MyIsapi/gradient.css" type="text/css">

    <script type="text/javascript" src="/js/Common.js"></script>
<!--    <script type="text/javascript" src="/js/QueryString.js"></script>--><!-- http://unixpapa.com/js/querystring.html -->
<!--    <script type="text/javascript" src="../SignalRChat/Scripts/Chat.js"></script>-->

    <link rel="stylesheet" href="../MyIsapi/InputKeyFilter.css" type="text/css">
<!--    <script type="text/javascript" src="/js/InputKeyFilter.js"></script>-->

    <!--Script references. -->
    <!--for IE5-->
<!--    <script type='text/javascript' src="../SignalRChat/Scripts/json2.js"></script>-->
    <!--Reference the jQuery library. -->
<!--    <script type='text/javascript' src="../SignalRChat/Scripts/jquery-1.6.4.js"></script>-->
    <!--Reference the SignalR library. -->
    <!--    ВНИМАНИЕ!!! Версия jquery.signalR-1.1.3.js не вызывает отключение пользователя от сервера при закрытии страницы.
        Как результать этот полльзователь остается а списке пользователей.
        Если снова зайти на сервер с этим именем, то в списке их будет несколько
        С версией (signalR-2.0.0.js) не работает отключение пользователя от сервера если пользователей больше 3
        по всей видимости зависает запрос на сервер в строке 7916:
            xhr.open( s.type, s.url, s.async );
        в файле
            Scripts/jquery-1.6.4.js
        для проверки зайти на сервер тремя пользователяим
        а затем щелкнуть на текущего пользователя в заголовке чата что бы перейти на страницу приглашения в чат http://localhost/chat/
        Кажется мне что это ограничение на число пользователей в IIS
        Этого ограничения нет в Server 2012R2
    -->
<!--    <script type='text/javascript' src="../SignalRChat/Scripts/jquery.signalR-2.0.0.js"></script>-->
    <!--    <script type='text/javascript' src="Scripts/jquery.signalR-1.1.3.js"></script>-->
    <!--Reference the autogenerated SignalR hub script. -->
<!--    <script type='text/javascript' src="../SignalRChat/signalr/hubs"></script>-->

    <!-- input type date http://jqueryui.com/datepicker/ -->
    <!--<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css"> -->
    <link rel="stylesheet" href="/js/jquery/ui/1.11.4/jquery-ui.css">
    <!--<script src="//code.jquery.com/jquery-1.10.2.js"></script>-->
<!--    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>-->
    <!--<script src="/js/jquery/ui/1.11.4/jquery-ui.js"></script>-->
    <!--<link rel="stylesheet" href="/resources/demos/style.css">-->
    <link rel="stylesheet" href="/js/jquery/ui/1.11.4/style.css">

    <style>
        .col1 {
            width: 50%; /* Ширина ячейки */
        }
        .col2 {
            width: 50%; /* Ширина ячейки */
        }
        /*
        .table-toggle {
            opacity: 0;
            max-height: 0;
            overflow: auto;
            -moz-transition: opacity 1s, max-height 1s;
            -ms-transition: opacity 1s, max-height 1s;
            transition: opacity 1s, max-height 1s;
            _display: none;
        }
        .table-expanded {
            max-height: 1000px;
            opacity: 1;
            _display: inline;
        }
        */
    </style>

</head>

<body class="gradient">
    <form id="form1" runat="server">
<!--       onload="javascript: init();" -->
    <div class="transparent" id='Message'></div>
    <script type="text/javascript">var emailSubject = "Chat error";</script>
    <div id="openpage" class="center"><img src="../img/Wait.gif" alt="wait" /></div>
    <div id="center" align="center" style="visibility:hidden;">
        <h1 id="pageTitle" align="center"></h1>
        <table style="width:auto">
            <tbody>
                <!--nickname-->
                <tr>
                    <td class="col1" style="border:0px" align="right"><span id="nicknamePrompt"></span>:</td>
                    <td class="col2" style="border:0px">
                        <input name="Nickname" id="Nickname" onkeyup="javascript: onKeyupNickname(this.value)" autofocus style="width:100%" maxlength ="129"/>
                    </td>
                </tr>
                <tr>
                    <td style="border:0px" align="right">
                        <a href="#" onclick="javascript: onclickAdditionally()">
                            <span id="branchAdditionally">▶</span>
                            <span id="additionallyHeader"></span>
                        </a>
                    </td>
                </tr>
            </tbody>
        </table>
        <div id="tableAdditionally" class="b-toggle">
            <table style="width:auto;">
                <tbody>
                    <!--first name-->
                    <tr>
                        <td class="col1" style="border:0px" align="right"><span id="firstNamePrompt" ></span>:</td>
                        <td class="col2" style="border:0px"><input id="firstName" style="width:100%" maxlength ="129" /></td>
                    </tr>
                    <!--second name-->
                    <tr>
                        <td style="border:0px" align="right"><span id="secondNamePrompt"></span>:</td>
                        <td style="border:0px"><input id="secondName" style="width:100%" maxlength ="129" /></td>
                    </tr>
                    <!--gender-->
                    <tr>
                        <td style="border:0px" align="right"><span id="genderPrompt"></span>:</td>
                        <td style="border:0px">
                            <select id="gender" style="width:100%">
                                <option id="selectGender" value="0" selected></option>
                                <option id="male" value="3"></option>
                                <option id="female" value="4"></option>
                                <option id="couple" value="2"></option>
                                <option id="another" value="1"></option>
                            </select>
                        </td>
                    </tr>
                    <!--birthday-->
                    <tr>
                        <td style="border:0px" align="right"><span id="birthdayPrompt"></span>:</td>
                        <td style="border:0px">
                            <input type="date" id="birthday" />
                            <input type="button" id="clearBirthday" onclick="javascript: onclickClearBirthday()" style="float: right" />
                        </td>
                    </tr>
                    <!--picture-->
<!--
                    <tr>
                        <td style="border:0px" align="right"><span id="picturePrompt"></span>:</td>
                        <td style="border:0px">
                            <input onchange="javascript: onchangePicture()" type="file" id="inputPicture">
                            <div id ="picture"><div class="fileTransferContainer"></div></div>
                        </td>
                    </tr>
-->
                    <!--about me-->
                    <tr>
                        <td style="border:0px" align="right"><span id="aboutMePrompt"></span>:</td>
                        <td style="border:0px; height: 50px;">
                            <textarea id="aboutMe" class="blok" onkeyup="javascript: onkeyupAboutMe()" style="height:50px;width:100%;border:0px;"></textarea>
                            <div id="cookieOwerflow"></div>
                        </td>
                    </tr>
                    <!--location-->
                    <tr>
                        <td style="border:0px" align="right"><span id="locationPrompt"></span>:</td>
                        <td style="border:0px; height: 50px;">
                            <input id="location" style="width:200px" maxlength ="129" />
                            <div id="geolocation" style="display:none;">
                                <a href="#" onclick="javascript: onclickGeolocation()">
                                    <span id="branchGeolocation">▶</span>
                                    <span id="geolocationPrompt"></span>
                                </a>
                                <div id="geolocationMessage" style="display:none;"></div>
                                <img id="wait" src="../img/Wait.gif" alt="wait" style="width:12px; height:12px;display:none" />
                                <div id="mapContainer" class="blok" style="margin-top:5px;display:none;"></div>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>

        </div>
        <table style="width:auto">
            <tbody>
                <% if(IsEditProfile()) { %>
                <!--Update Profile-->
                <tr>
                    <td style="border:0px"></td>
                    <td style="border:0px">
                        <input type="button" id="updateProfile" onclick="javascript: onClickUpdateProfile()" />
                    </td>
                </tr>
                <!--Chat Room-->
                <tr style="border-top:1px solid black">
                <% } else { %>
                <tr>
                <% } %>
                    <td class="col1" style="border:0px" align="right"><span id="chatRoomPrompt"></span>:</td>
                    <td class="col2" style="border:0px">
                        <input name="chatRoom" id="chatRoom" onkeyup="javascript: onKeyupChatRoom(this.value)" maxlength ="129" />
                        <input type="button" id="defaultChatRoom" style="float: right" onclick="javascript: getDefaultChatRoom()" />
                    </td>
                </tr>
                <!--select Chat Room-->
                <tr>
                    <td style="border:0px;">
                        <a style="float:right;" href="#" onclick="javascript: onclickSelectChatRoom()">
                            <span id="branchSelectChatRoom">▶</span>
                            <span id="selectChatRoomPrompt"></span>
                        </a>
                    </td>
                    <td style="border:0px">
                        <div id="roomsList" class="blok" style="height:200px;overflow:auto;display:none">
                            <asp:ListView ID="ListView1" runat="server" DataKeyNames="RoomNameCount" DataSourceID="SqlDataSource2">
                                <ItemTemplate>
                                    <% //<!--ATTENTION!!! Do not divide line below to several lines.  Also see g_onUpdateRoom() function-->%>
                                    <div name="itemRoom" class="streamer" style="overflow:auto;" onclick="javascript: onclickItemRoom(event)"><%# Eval("RoomName") %><span style="float: right"><%# Eval("RoomNameCount") %></span></div>
                                </ItemTemplate>
                            </asp:ListView>
                            <asp:SqlDataSource
                                ID="SqlDataSource2"
                                runat="server"
                                ConnectionString="Data Source=.\SQLEXPRESS;Initial Catalog=DBChat;Integrated Security=True"
                                ProviderName="System.Data.SqlClient"
                                SelectCommand="select RoomName, RoomNameCount from dbo.ViewRoomList order by RoomNameCount desc, RoomName">
                            </asp:SqlDataSource>
                        </div>
                    </td>
                </tr>
                <!--submit-->
                <tr>
                    <td style="border:0px"></td>
                    <td style="border:0px">
                        <input type="button" id="submit" style="float: right" onclick="javascript: return onClickSubmit()" />
                    </td>
                </tr>
            </tbody>
        </table>
        <script>
            var g_submit = false;
            loadScript("lang/" + getLanguageCode() + ".js", function () {
                document.getElementById("chatRoomPrompt").innerHTML = lang.chatRoomPrompt;//Type a chat room name
                document.getElementById("selectChatRoomPrompt").innerHTML = lang.selectChatRoomPrompt;//or select a room from the list
                document.getElementById("defaultChatRoom").value = lang.defaultString;//Default

                document.getElementById("geolocationPrompt").innerHTML = lang.geolocationPrompt;//Geolocation

                document.getElementById("additionallyHeader").innerHTML = lang.additionally;//Additionally

                document.getElementById("nicknamePrompt").innerHTML = lang.myNickname;//My nickname
                document.getElementById("firstNamePrompt").innerHTML = lang.firstName;//First Name
                document.getElementById("secondNamePrompt").innerHTML = lang.secondName;//Second Name
                document.getElementById("aboutMePrompt").innerHTML = lang.aboutMe;//About Me
                document.getElementById("locationPrompt").innerHTML = lang.myLocation;//My Location

                document.getElementById("genderPrompt").innerHTML = lang.i;//I
                document.getElementById("selectGender").innerHTML = lang.selectGender;//select gender
                document.getElementById("male").innerHTML = lang.male;//male
                document.getElementById("female").innerHTML = lang.female;//female
                document.getElementById("couple").innerHTML = lang.couple;//couple
                document.getElementById("another").innerHTML = lang.another;//another

                document.getElementById("submit").value = lang.submit;//Enter

                document.getElementById("birthdayPrompt").innerHTML = lang.birthdayPrompt;//Birthday
                document.getElementById("clearBirthday").value = lang.clear;//Clear

                <% if(IsEditProfile()) { %>
                document.title = lang.myProfile;//"My profile"
                document.getElementById("updateProfile").value = lang.updateProfile;//"Update Profile"
                <% } else { %>
                document.title = lang.welcomeToChat;//"Welcome to chat"
                <% } %>
                document.getElementById("pageTitle").innerHTML = document.title;
                    
                //http://unixpapa.com/js/querystring.html
                loadScript("/js/QueryString.js", function () {
                    loadScript("../SignalRChat/Scripts/Chat.js", function () {
                        var q = new QueryString();
                        g_user.browserID = q.value("browserID");
                        if ((typeof g_user.browserID != 'undefined') && (g_user.browserID != "")) {
                            //                    $.connection.chatHub.server.getUser(g_user.browserID);
                        }
                        else {
                            var userJSON = get_cookie("User");
                            var user;
                            if (typeof userJSON != 'undefined') {
                                try {
                                    user = JSON.parse(userJSON);
                                } catch (e) {
                                    consoleError(e);
                                }
                            }

                            //nickname
                            var Nickname = q.value("Nickname");
                            if (!Nickname) {
                                if (typeof user != 'undefined')
                                    Nickname = user.nickname;
                            }
                            if (Nickname)
                                document.getElementById("Nickname").value = Nickname;

                            if (typeof user != 'undefined') {
                                setFields(user);
                            }

                            var chatRoom = document.getElementById("chatRoom");
                            var chatRoomName = q.value("chatRoom");
                            if (chatRoomName)
                                chatRoom.value = chatRoomName;
                            else getDefaultChatRoom();
                            disable(false);
                        }

                        //geolocation
                        //http://webmap-blog.ru/obzors/ispolzuem-html5-geolocation-api
                        //геолокацию надо загружать после загрузки Chat.js что бы g_user был определен
                        if (navigator.geolocation) {
                            document.getElementById('geolocation').style.display = 'block';
                            if (get_cookie('geolocation', false) == 'true')
                                onclickGeolocation();
                        } else consoleError('geolocation does not supports');

                        loadScript("../SignalRChat/Scripts/json2.js", function () {//for IE5
                            loadScript("../SignalRChat/Scripts/jquery-1.6.4.js", function () {//Reference the jQuery library.
                                loadScript("../SignalRChat/Scripts/jquery.signalR-2.0.0.js", function () {//Reference the SignalR library.
                                    loadScript("../SignalRChat/signalr/hubs", function () {
                                        //loadScript("//code.jquery.com/ui/1.11.4/jquery-ui.js"//не работает с выключенвм интернетом
                                        loadScript("/JS/jquery/ui/1.11.4/jquery-ui.js"
                                            , function () {startHub();});
                                    });
                                });
                            });
                        });
                    });
                });

                //birthday
                var options = {
                    formatMessage: lang.typeBirthday//'Please type your birthday %s'
                    , dateLimitMessage: lang.birthdayLimit//'Please type your birthday between "%min" and "%max"'
                }
                try {//for compatibility with IE6
                    var min = new Date(((new Date().getFullYear() - 100)
                        + '-01-01T00:00:00Z')//for Safari
                        .toString()).toISOString().match(/^(.*)T.*$/i)[1];//'1999-01-01'//100 years ago;
                    options.min = min;
                    var max = new Date(((new Date().getFullYear() - 7) + '-01-01T00:00:00Z').toString()).toISOString().match(/^(.*)T.*$/i)[1];//"2010-06-27" //7 years ago
                    options.max = max;
                } catch (e) { }
                loadScript("/js/InputKeyFilter.js", function () {
                    CreateDateFilter('birthday', options);
                    CreateMaxLengthFilter('Nickname', {
                        formatMessage: lang.lengthLimit//'Length limit to %s sumbols'
                        , onerror: function (elementInput) {
                            elementInput.focus();//except Firefox
                        }
                    });
                    CreateMaxLengthFilter('firstName', {
                        formatMessage: lang.lengthLimit//'Length limit to %s sumbols'
                        , onerror: function (elementInput) {
                            elementInput.focus();
                        }
                    });
                    CreateMaxLengthFilter('secondName', {
                        formatMessage: lang.lengthLimit//'Length limit to %s sumbols'
                        , onerror: function (elementInput) {
                            expandAdditionally();
                            elementInput.focus();
                        }
                    });
                    CreateMaxLengthFilter('chatRoom', {
                        formatMessage: lang.lengthLimit//'Length limit to %s sumbols'
                        , onerror: function (elementInput) {
                            elementInput.focus();
                        }
                    });
                    CreateMaxLengthFilter('location', {
                        formatMessage: lang.lengthLimit//'Length limit to %s sumbols'
                        , onerror: function (elementInput) {
                            elementInput.focus();
                        }
                    });
                });

                disable(false);
            });

            function startHub() {
                //consoleLog('startHub');

                //<!--Add script to update the page and send messages.-->
                $(function () {
                    try {
                        // Declare a proxy to reference the hub.
                        var chat = $.connection.chatHub;

                        chat.client.onRemoveRoom = function (roomName) {
                            g_onRemoveRoom(roomName);
                        }

                        chat.client.onUpdateRoom = function (room, strRoomNamePrev) {
                            g_onUpdateRoom(room, strRoomNamePrev);
                        }

                        chat.client.onNicknameBusy = function () {
                            var message = lang.nicknameIsBusy//nickname is busy
                            consoleLog('chat.client.onNicknameBusy()');
                            var elementInput = document.getElementById("Nickname");
                            inputKeyFilter.TextAdd(message, elementInput, "downarrowdivred");
                            elementInput.focus();
                            g_submit = false;
                            disable(false);
                        }

                        chat.client.onDuplicateUserNameInRoom = function () {
                            var elementChatRoom = document.getElementById("chatRoom");
                            var message = lang.duplicateUsernameInRoom.replace("%s", elementChatRoom.value);//You are already in the "%s" room
                            consoleLog('chat.client.onDuplicateUserNameInRoom(). Room Name: ' + elementChatRoom.value);
                            inputKeyFilter.TextAdd(message, elementChatRoom, "downarrowdivred");
                            elementChatRoom.focus();
                            g_submit = false;
                            disable(false);
                        }

                        chat.client.onNicknameOK = function (userOK, roomName) {
                            consoleLog('chat.client.onNicknameOK(userOK, "' + roomName + '")');
                            if (!g_submit)
                                return;

                            g_user.browserID = userOK.browserID;
                            //g_user.sss = {aaa: '123', bbb: '456'}
                            var userJSON = JSON.stringify(g_user);
                            var user;
                            if (navigator.cookieEnabled)
                                user = '';
                            else user = "user=" + userJSON + '&';//Посетителя выводим в адресную строку только если не доступны куки. Это нужно для совместимости с анонимайзером http://cameleo.ru/
                            SetCookie("User", userJSON);
                            var length = SetCookie("User", userJSON, '; path=/');//Непонятно почему но если добавить '; path=/', то куки на странице SignalRChat читаются правильно а на странице Chat остаются старое значение. Поэтому добавил еще одну команду SetCookie в предыдущей строке
                            if (length != 0) {
                                g_cookieOwerflow = userJSON.length - length;
                                var elementAboutMe = document.getElementById('aboutMe');
                                expandAdditionally()
                                elementAboutMe.focus();
                                g_aboutMeLength = elementAboutMe.value.length;
                                consoleError('User cookie owerflow: ' + g_cookieOwerflow);
                                //В Safari иногда не записывается. Надо разбираться
                                //alert(lang.cookieOwerflow.replace('%s', g_cookieOwerflow));//Cookie owerflow about %s sumbols. Please decrease the "About Me" field.
                                //return;
                            }
                            window.location = getOrigin() + "/SignalRChat?" + user + 'chatRoom=' + encodeURIComponent(document.getElementById("chatRoom").value);
                        }

                        chat.client.onUser = function (user) {
                            consoleLog("chat.client.onUser(" + JSON.stringify(user) + ")");
                            if (user && user.browserID) {
                                document.getElementById("Nickname").value = user.nickname;
                                g_user.id = user.id;
                                setFields(user);
                                disable(false);
                                return;
                            }
                            if (typeof g_user.browserID == 'undefined')
                                return;
                            if (!document.getElementById('updateProfile'))
                                return;//сейчас уже мы создаем нового пользователя. Поэтому его пока нет в базе данных и nickname = null. Нет необгодимости переходитьв режим создания нового пользователя
                            g_user.browserID = undefined;
                            alert(lang.profileNotExist);//"Your profile does not exist. Please create a new profile.");
                            gotoChatPage();
                        }

                        chat.client.onNickname = function (nickname) {
                            consoleLog("chat.client.onNickname(" + nickname + ")");
                            if (nickname) {
                                document.getElementById("Nickname").value = nickname;
                                disable(false);
                            } else {
                                if (typeof g_user.browserID != 'undefined') {
                                    if (!document.getElementById('updateProfile'))
                                        return;//сейчас уже мы создаем нового пользователя. Поэтому его пока нет в базе данных и nickname = null. Нет необгодимости переходитьв режим создания нового пользователя
                                    g_user.browserID = undefined;
                                    alert(lang.profileNotExist);//"Your profile does not exist. Please create a new profile.");
                                    gotoChatPage();
                                }
                            }
                        }

                        chat.client.onUpdatePrifileOK = function () {
                            consoleLog("onUpdatePrifileOK()");
                            inputKeyFilter.TextAdd(lang.updateProfileOK//The profile has been updated successfully
                                , document.getElementById("updateProfile"), "uparrowdivgreen");
                        }

                        chat.client.onError = function (error) {
                            ErrorMessage('SignalR onError: ' + error)
                        }

                        //http://www.asp.net/signalr/overview/guide-to-the-api/hubs-api-guide-javascript-client#connectionlifetime
                        //SignalR provides the following connection lifetime events that you can handle:
                        $.connection.hub.starting(function () {
                            consoleLog('SignalR starting: Raised before any data is sent over the connection.');
                        });
                        $.connection.hub.received(function () {
                            //consoleLog('SignalR received: Raised when any data is received on the connection. Provides the received data.');
                        });
                        $.connection.hub.connectionSlow(function () {
                            consoleLog('SignalR connectionSlow: We are currently experiencing difficulties with the connection.');
                        });
                        $.connection.hub.reconnecting(function () {
                            consoleLog('SignalR reconnecting: Raised when the underlying transport begins reconnecting.');
                            beep();
                            disable(true);
                        });
                        $.connection.hub.reconnected(function () {
                            consoleLog('SignalR reconnected: Raised when the underlying transport has reconnected.');
                            disable(false);
                        });
                        $.connection.hub.stateChanged(function (state) {
                            //http://stackoverflow.com/questions/9334838/signalr-detect-connection-state-on-client
                            var stateConversion = { 0: 'connecting', 1: 'connected', 2: 'reconnecting', 4: 'disconnected' };
                            consoleLog('SignalR state changed from: ' + stateConversion[state.oldState]
                                + ' to: ' + stateConversion[state.newState]);

                            function stateMessage(state) {
                                var message = "";
                                switch (state) {
                                    case $.connection.connectionState.connecting://0://connecting
                                        message = (isRussian() ? "Соединение" : "Сonnecting") + "...";
                                        break;
                                    case $.connection.connectionState.connected://1://connected
                                        message = "";
                                        init();
                                        break;
                                    case $.connection.connectionState.reconnecting://2://reconnecting
                                        message = '<img src="../img/Wait.gif" style="width:20px; height:20px;" alt="wait" />  ' +
                                            (isRussian() ? "Восстановление соединения" : "Reconnecting") + "...";
                                        break;
                                    case $.connection.connectionState.disconnected://4://disconnected
                                        message = (isRussian() ? "Потеря соединения" : "Disconnected")
                                            + "... <input type='button' value='" + (isRussian() ? "Cоедениться снова" : "Connect again") + "' onclick='javascript: return onConnectAgain()' />";
                                        break;
                                    default:
                                        ErrorMessage("Unknown SignalR state: " + state);
                                        return;
                                }
                                MessageElement(message);
                            }
                            stateMessage(state.newState);
                        });
                        $.connection.hub.disconnected(function () {
                            consoleLog('SignalR disconnected: Raised when the connection has disconnected.');
                        });
                        $.connection.hub.error(function (error) {
                            consoleError('SignalR error: ' + error)
                        });

                        //To enable client-side logging on a connection,
                        //set the logging property on the connection object before you call the start method to establish the connection.
                        //$.connection.hub.logging = true;

                        // Start the connection.
                        $.connection.hub.start().done(function () {
                        });
                    } catch (e) {
                        ErrorMessage(e.message);
                    }
                });
            }

            function onKeyupNickname(value) {
                consoleLog("onKeyupNickname(" + value + ")");
                g_user.nickname = value;
                $.connection.chatHub.server.validNickname(JSON.stringify(g_user), document.getElementById("chatRoom").value);
            }

            function onKeyupChatRoom(value) {
                consoleLog("onKeyupChatRoom(" + value + ")");
                if (g_user.id != "")
                    g_user.nickname = "";
                $.connection.chatHub.server.validNickname(JSON.stringify(g_user), value);

                //find room in the rooms list
                if (value == "")
                    return;
                value = value.toUpperCase();
                var itemRooms = document.getElementsByName("itemRoom");
                for (var i = 0; i < itemRooms.length; i++) {
                    var charRoomName = getItemRoomName(itemRooms[i]).toUpperCase();
//consoleLog("charRoomName = " + charRoomName);
                    if (charRoomName.indexOf(value) == 0) {
                        selectItemRoom(itemRooms[i]);
                        itemRooms[i].scrollIntoView();
                        break;
                    }
                }
            }

            var g_clicked_itemRoom;
            function onclickItemRoom(e) {
                if (!e) e = window.event;
                var itemRoom = e.target || e.srcElement;
                consoleLog("onclickItemRoom(" + itemRoom + ")");
                selectItemRoom(itemRoom);

                //change chatRoom input element
                var charRoomName = getItemRoomName(itemRoom);
                document.getElementById("chatRoom").value = charRoomName;
                $.connection.chatHub.server.validNickname(JSON.stringify(g_user), charRoomName);
            }

            function updateProfile() {

                //Nickname test
                var elementInput = document.getElementById("Nickname");
                var value = elementInput.value.replace(/^\s+/, "");
                if (value == "") {
                    inputKeyFilter.TextAdd(lang.typeNickname//'Please type your nickname'
                        , elementInput);
                    elementInput.focus();
                    return false;
                }
                if (!elementInput.validation())
                    return false;
                g_user.nickname = value;

                //Gender
                var elementGender = document.getElementById("gender");
                if (elementGender.selectedIndex != -1)
                    g_user.genderId = elementGender[elementGender.selectedIndex].value;

                //Birthday
//                g_user.birthday = '';
                var elementBirthday = document.getElementById("birthday");
                if (elementBirthday.defaultValue != elementBirthday.value) {
                    //for compatibility with IE6
                    var arrayDate = elementBirthday.value.match(/^([\d]*)-([\d]*)-([\d]*)$/);
                    if (!arrayDate || (arrayDate.length != 4)) {
                        inputKeyFilter.TextAdd(lang.typeBirthday.replace('%s', elementBirthday.defaultValue)//'Please type your birthday %s'
                            , elementBirthday);
                        elementBirthday.focus();
                        return false;
                        /*
                                                consoleError('Invalid date: ' + target.value);
                                                return;
                        */
                    }
                    /*not compatible with IE6
                            if (isNaN(Date.parse(elementBirthday.value
                        + 'T00:00:00Z'//for Safari
                        ))) 
                    */
                    if (isNaN(new Date(
                        arrayDate[1]//year
                        , arrayDate[2]//month
                        , arrayDate[3]//date
                    ).valueOf())) {
                        inputKeyFilter.TextAdd(lang.typeBirthday.replace('%s', elementBirthday.defaultValue)//'Please type your birthday %s'
                            , elementBirthday);
                        elementBirthday.focus();
                        return false;
                    }
                    g_user.birthday = elementBirthday.value;
                } else delete g_user.birthday;

                //firstName
                var elementFirstName = document.getElementById("firstName");
                if (elementFirstName.value != '') {
                    if (!elementFirstName.validation()) {
                        expandAdditionally();
                        return false;
                    }
                    g_user.firstName = elementFirstName.value;
                } else delete g_user.firstName;

                //secondName
                var elementSecondName = document.getElementById("secondName");
                if (elementSecondName.value != '') {
                    if (!elementSecondName.validation()) {
                        expandAdditionally();
                        return false;
                    }
                    g_user.secondName = elementSecondName.value;
                } else delete g_user.secondName;

                //location
                var elementLocation = document.getElementById("location");
                if (elementLocation.value != '') {
                    if (!elementLocation.validation()) {
                        expandAdditionally();
                        return false;
                    }
                    g_user.location = elementLocation.value;
                } else delete g_user.location;

                //geolocation
                if (geolocationState.boGeolocation && !geolocationState.ready) {
                    expandAdditionally();
                    inputKeyFilter.TextAdd(lang.geolocationNotReady//'Geolocation is not ready'
                        , document.getElementById("mapContainer"));
                    return false; 
                }

                //aboutMe
                var aboutMe = document.getElementById("aboutMe").value;
                if (aboutMe != '')
                    g_user.aboutMe = aboutMe;
                else delete g_user.aboutMe;

                g_user.timezoneOffset = new Date().getTimezoneOffset();

                return true;
            }

            function onClickUpdateProfile() {
                consoleLog("onClickUpdateProfile()");

                if (!updateProfile())
                    return false;
                var userJSON = JSON.stringify(g_user);
                SetCookie("User", userJSON);
                $.connection.chatHub.server.updateProfile(userJSON);
                return false;
            } 

            function onClickSubmit() {
                consoleLog("onClickSubmit() $.connection.hub.state = " + $.connection.hub.state);

                if (!updateProfile()) {
                    consoleError('updateProfile failed!');
                    return false;
                }

                //chatRoom test
                elementInput = document.getElementById("chatRoom");
                value = elementInput.value.replace(/^\s+/, "");
                if (value == "") {
                    inputKeyFilter.TextAdd(lang.typeChatRoom, elementInput);//'Please type the name of the chat room'

                    elementInput.focus();
                    return false;
                }
                if (!elementInput.validation())
                    return false;

                if ((typeof $ != 'undefined') && (typeof $.connection != 'undefined') && (typeof $.connection.hub != 'undefined')
                    && ($.connection.hub.state == $.connection.connectionState.connected) && !enterToChat())
                    return false;

                g_submit = true;
                disable(true);
                return false;
            }
            function enterToChat() {
                try {
                    $.connection.chatHub.server.enterToChat(JSON.stringify(g_user), value);
                } catch (e) {
                    consoleError(e.message);
                    return false;
                }
                return true;
            }
            function setFields(user) {
                //gender
                var elementGender = document.getElementById("gender");
                for (var i = 0; i < elementGender.length; i++) {
                    if (elementGender[i].value == user.genderId) {
                        elementGender[i].selected = true;
                        break;
                    }
                }

                //birthday
                var elementBirthday = document.getElementById("birthday");
                //                    var birthday = window.get_cookie('Birthday', elementBirthday.defaultValue);
                var birthday = user.birthday;
                if ((typeof birthday != 'undefined') && (birthday != elementBirthday.defaultValue))
                    elementBirthday.value = birthday;

                if (typeof user.firstName != 'undefined')
                    document.getElementById("firstName").value = user.firstName;
                if (typeof user.secondName != 'undefined')
                    document.getElementById("secondName").value = user.secondName;
                if (typeof user.aboutMe != 'undefined')
                    document.getElementById("aboutMe").value = user.aboutMe;
                if (typeof user.location != 'undefined')
                    document.getElementById("location").value = user.location;
            }
            function init() {
                consoleLog('init()');
                //http://unixpapa.com/js/querystring.html
                var q = new QueryString();
                g_user.browserID = q.value("browserID");
                if ((typeof g_user.browserID != 'undefined') && (g_user.browserID != "")) {
                    $.connection.chatHub.server.getUser(g_user.browserID);
                }
                if (g_submit)
                    enterToChat();
            }

            function onclickAdditionally() {
                consoleLog("onclickAdditionally()");
                onbranch('tableAdditionally', 'branchAdditionally');
            };
            function expander(branchId, informerId, displayVisible) {
                //consoleLog("onclickSelectChatRoom()");
                if (typeof displayVisible == 'undefined')
                    displayVisible = 'block';
                var branch = document.getElementById(branchId);
                var display, res;
                var informer = document.getElementById(informerId);
                if (branch.innerHTML == "▼") {
                    display = "none";
                    branch.innerHTML = "▶";
                    res = false;
                } else {
                    display = displayVisible;
                    branch.innerHTML = "▼";
                    res = true;
                }
                informer.style.display = display;
                return res;
            };
            function onclickSelectChatRoom() {
                consoleLog("onclickSelectChatRoom()");
                expander('branchSelectChatRoom', 'roomsList');
            };
            function geolocation() {
                //consoleLog("geolocation()");
                var geolocationMessageDisplay;

                var elementLocation = document.getElementById('location');
                var geolocationMessage = document.getElementById('geolocationMessage');
                var clientWidth = elementLocation.clientWidth + 'px';
                var wait = document.getElementById('wait');

                //http://webmap-blog.ru/obzors/ispolzuem-html5-geolocation-api
                if (navigator.geolocation) {
                    var mapContainer = document.getElementById("mapContainer");
                    switch (mapContainer.childNodes.length) {
                        case 0:
                            break;
                        case 1:
                            mapContainer.removeChild(mapContainer.childNodes[0]);
                            break;
                        default: consoleError('mapContainer.childNodes.length = ' + mapContainer.childNodes.length);
                    }
                    consoleLog('geolocation');
                    geolocationMessage.innerHTML = lang.noGeolocation;//Your browser does not support geolocation
                    wait.style.display = 'block';
                    navigator.geolocation.getCurrentPosition(function (position) {
                        //consoleLog('navigator.geolocation.getCurrentPosition success');
                        consoleLog('latitude = ' + position.coords.latitude + '. longitude = ' + position.coords.longitude + '. accuracy = ' + position.coords.accuracy + '. altitude = ' + position.coords.altitude + '. altitudeAccuracy = ' + position.coords.altitudeAccuracy + '. speed = ' + position.coords.speed + '. heading = ' + position.coords.heading);
                        g_user.position = {
                            coords: {
                                    accuracy: position.coords.accuracy
                                , latitude: position.coords.latitude
                                , longitude: position.coords.longitude
                            }
                            , timestamp: new Date(position.timestamp).toISOString()
                        }
                        if (position.coords.altitude != null)
                            g_user.position.coords.altitude = position.coords.altitude;
                        if (position.coords.altitudeAccuracy != null)
                            g_user.position.coords.altitudeAccuracy = position.coords.altitudeAccuracy;
                        if (position.coords.heading != null)
                            g_user.position.coords.heading = position.coords.heading;
                        if (position.coords.speed != null)
                            g_user.position.coords.speed = position.coords.speed;

                        var clientWidth = elementLocation.clientWidth + 'px';
                        mapContainer.style.height = clientWidth;
                        mapContainer.style.width = clientWidth;
                        mapContainer.position = position;
                        mapPosition(mapContainer);

                        //get my address
                        loadScript("/js/myRequest.js", function () {
                            //https://developers.google.com/maps/documentation/geocoding/intro?hl=ru#ReverseGeocoding
                            var response = JSON.parse(getSynchronousResponse('https://maps.googleapis.com/maps/api/geocode/json?latlng='
                                + position.coords.latitude + ',' + position.coords.longitude + '&key=AIzaSyDEYZcjIGeiMYqmr453X7Mfh-ogNx0j9uc'));
                            if (response.status == 'OK') {
                                var detected = false;
                                for (var i = 0; i < response.results.length; i++) {
                                    if (response.results[i].types[0] == 'locality') {
                                        consoleLog('My address: ' + response.results[i].formatted_address);
                                        elementLocation.value = response.results[i].formatted_address;
                                        detected = true;
                                        geolocationMessage.innerHTML = lang.geolocationWarning;//WARNING!!! All chat visitors will see your true location
                                        wait.style.display = 'none';
                                        break;
                                    }
                                }
                                if (!detected) consoleError('get my address failed!');
                            } else consoleError('response.status: ' + response.status + ' ' + response.error_message);
                        });
                        geolocationState.ready = true;
                    }
                    , function (err) {
                        consoleError('geolocation.getCurrentPosition error: ' + err.code + ': ' + err.message);
                        var message = '';
                        switch (err.code) {
                            case 0://UNKNOWN_ERROR 
                                break;
                            case err.PERMISSION_DENIED:
                                if (window.location.protocol == "https:"){
//                                    message = lang.permissionDeniedUser;//'User denied Geolocation'
                                    //onclickGeolocation();
                                }
                                else message = lang.permissionDenied;//'Permission to media devices is denied. Please use protocol for secure communication HTTPS for opening this web page.' 
                                break;
                            case err.POSITION_UNAVAILABLE:
                                message = lang.positionUnavailable;//'position unavailable'
                                break;
                            case err.TIMEOUT:
                                message = lang.positionTimeout;//'position timeout'
                                break;
                            default: consoleError('err.code = ' + err.code);
                        }
                        //                        consoleError(err.code + ': ' + err.message + message);
                        if (message.length != 0)
                            message = ' ' + message;
                        geolocationMessage.innerHTML = '<font style="color:red;">' + lang.geolocationFailed + ' ' + err.code + ': ' + err.message + message + '</font>'//geolocation failed!
                    });
                } else concoleError('Geolocation API is not supported in your browser');
            };

            var geolocationState = {
                boGeolocation: false
                , ready: false
            }

            function onclickGeolocation() {
                consoleLog("onclickGeolocation()");
                var geolocationMessageDisplay;

                var elementLocation = document.getElementById('location');
                var geolocationMessage = document.getElementById('geolocationMessage');
                var clientWidth = elementLocation.clientWidth + 'px';
                geolocationMessage.style.width = clientWidth;

                var geolocationPrompt = document.getElementById("geolocationPrompt");
                if (expander('branchGeolocation', 'mapContainer')) {
                    geolocationMessageDisplay = 'block';
                    geolocation();
                    geolocationState.boGeolocation = true;
                    geolocationPrompt.innerHTML = lang.cancel;//Cancel
                } else {
                    geolocationMessageDisplay = 'none';
                    geolocationState.boGeolocation = false;
                    delete g_user.position;
                    document.getElementById('wait').style.display = geolocationMessageDisplay;
                    geolocationPrompt.innerHTML = lang.geolocationPrompt;//Geolocation
                }
                SetCookie('geolocation', geolocationState.boGeolocation.toString());
                geolocationMessage.style.display = geolocationMessageDisplay;
            };

            var g_cookieOwerflow = 0, g_aboutMeLength = 0;
            function onkeyupAboutMe() {
                //consoleLog('onkeyupAboutMe()');
                if (g_cookieOwerflow == 0)
                    return;
                updateProfile();
                var userJSON = JSON.stringify(g_user);
                var length = SetCookie("User", userJSON);
                var message = '';
                if (length != 0) {
                    g_cookieOwerflow = userJSON.length - length;
                    var elementAboutMe = document.getElementById('aboutMe');
                    g_aboutMeLength = elementAboutMe.value.length;
                    consoleError('User cookie owerflow: ' + g_cookieOwerflow);

                    var sumbolsLength = g_cookieOwerflow + (document.getElementById('aboutMe').value.length - g_aboutMeLength);
                    if (sumbolsLength > 0)
                        message = '<font style="color:red;">' + lang.symbolsOwerflow + '</font>';//%s symbols owerflow
                    else {
                        sumbolsLength = -sumbolsLength;
                        message = lang.symbolsLeft;//%s symbols left
                    }
                    message = message.replace('%s', sumbolsLength);
                }
                document.getElementById('cookieOwerflow').innerHTML = message;
            }
            function onclickClearBirthday() {
                    
                var elementBirthday = document.getElementById("birthday");
                elementBirthday.value = elementBirthday.defaultValue;
                if (typeof elementBirthday.ikf != 'undefined')
                    elementBirthday.ikf.oldValue = elementBirthday.defaultValue;
            } 
            function getDefaultChatRoom() { return document.getElementById("chatRoom").value = "Chat"; }

            //ATTENTION!!! Also see createElementRoom in G:\My documents\MyProjects\trunk\WebFeatures\WebFeatures\SignalRChat\SignalR Getting Started Application\C#\SignalRChat\Default.aspx
            function createElementRoom(elementRoom, room) {
                elementRoom.className = "streamer";
                elementRoom.onclick = onclickItemRoom;
            }

            function expandAdditionally() {
                if (!window.isBranchExpanded(document.getElementById('tableAdditionally')))
                    onclickAdditionally();
            }

            function onConnectAgain() {
                //consoleLog("onConnectAgain()");
                location.reload();
            }
            function disable(isDisable) {
                    
                var visibilityCenter;
                var visibilityOpenpage;
                if (isDisable) {
                    visibilityCenter = "hidden";
                    visibilityOpenpage = "visible";
                } else {
                    visibilityCenter = "visible";
                    visibilityOpenpage = "hidden";
                }
                document.getElementById("center").style.visibility = visibilityCenter;
                document.getElementById("openpage").style.visibility = visibilityOpenpage;
                <% if(IsEditProfile()) { %>
//                    document.getElementById("updateProfile").disabled = isDisable;
                <% } %>
            }
        </script>
        </div>
    </form>
</body>
</html>